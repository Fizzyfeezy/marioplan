{"version":3,"sources":["components/layout/mario.png","components/layout/SignedInLinks.js","store/actions/authAction.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Notification.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","store/actions/projectAction.js","components/projects/CreateProject.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","index.js"],"names":["module","exports","connect","dispatch","signOut","getState","firebase","auth","then","type","props","profile","className","to","onClick","initials","SignedOutLinks","state","links","uid","src","Logo","width","height","alt","isLoaded","ProjectSummary","project","title","moment","createdAt","toDate","calendar","ProjectList","projects","map","id","key","Notification","notifications","item","user","content","time","fromNow","Dashboard","this","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","authorFirstName","authorLastName","SignIn","handleChange","e","setState","target","value","handleSubmit","preventDefault","signIn","email","password","authError","onSubmit","onChange","htmlFor","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","selectChange","gender","signUp","firstname","lastname","phonenumber","confirmpassword","document","addEventListener","elems","querySelectorAll","M","FormSelect","init","inDuration","outDuration","hover","coverTrigger","disabled","true","newUser","getstate","getFirestore","createUserWithEmailAndPassword","resp","doc","set","createProject","add","authorId","Date","CreateProject","history","push","data-length","App","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","action","console","log","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","getFirebase","reduxFirestore","rrfProps","config","userProfile","useFirestoreForProfile","attachAuthIsReady","createFirestoreInstance","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.93c8dad5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/mario.43925cfc.png\";","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport {signOut} from '../../store/actions/authAction'\r\n\r\nfunction SignedInLinks(props) {\r\n    const {profile}= props;\r\n    return (\r\n        <div>\r\n            <ul className = 'right'>\r\n                <li><NavLink to = '/create'>New Pojects</NavLink></li>\r\n                <li><a onClick = {props.signOut}>Log out</a></li>\r\n                <li><NavLink to = '/' className = \"btn btn-floating blue lighten-2\">{profile.initials}</NavLink></li>\r\n            </ul>  \r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signOut : () => dispatch(signOut())\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(SignedInLinks)\r\n","import firebase from 'firebase/app';\r\n\r\nexport const signIn = (credentials) => {\r\n    return (dispatch, getState) => {\r\n        //make async call to database\r\n        //const firebase = getFirebase();\r\n        firebase.auth().signInWithEmailAndPassword(\r\n            credentials.email,\r\n            credentials.password\r\n        ).then(() => {\r\n            dispatch({ type: 'LOGIN_SUCCESS'});\r\n        }).catch((err) => {\r\n            dispatch({type: \"LOGIN_ERROR\", err});\r\n        }) \r\n    }\r\n}\r\n\r\nexport const signOut = () => {\r\n    return (dispatch, getState) => {\r\n        firebase.auth().signOut().then(() => {\r\n            dispatch({type: 'SIGNOUT_SUCCESS'});\r\n        } )\r\n    }\r\n}\r\n\r\nexport const signUp = (newUser) => {\r\n    return (dispatch, getstate, {getFirestore}) => {\r\n        const firestore = getFirestore();\r\n        firebase.auth().createUserWithEmailAndPassword(\r\n            newUser.email,\r\n            newUser.password\r\n        ).then((resp) => {\r\n            return firestore.collection('users').doc(resp.user.uid).set({\r\n            firstname: newUser.firstname,\r\n            lastname: newUser.lastname,\r\n            phonenumber : newUser.phonenumber,\r\n            gender : newUser.gender,\r\n            confirmpassword : newUser.confirmpassword,\r\n            initials: newUser.firstname[0] + newUser.lastname[0]\r\n            })\r\n        }).then(() => {\r\n            dispatch({type: 'SIGNUP_SUCCESS'});\r\n        }).catch((err) => {\r\n            dispatch({type: 'SIGNUP_ERROR', err});\r\n        })\r\n    }\r\n}","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nfunction SignedOutLinks() {\r\n    return (\r\n        <div>\r\n            <ul className = 'right'>\r\n                <li><NavLink to = '/register'>Signup</NavLink></li>\r\n                <li><NavLink to = '/login'>Login</NavLink></li>\r\n            </ul>  \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SignedOutLinks\r\n","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport SignedInLinks from './SignedInLinks';\r\nimport Logo from './mario.png';\r\nimport SignedOutLinks from './SignedOutLinks';\r\nimport {connect} from 'react-redux';\r\n\r\nfunction Navbar(props) {\r\n    const  {auth, profile} = props;\r\n    const links = auth.uid ? <SignedInLinks profile = {profile}/> : <SignedOutLinks />\r\n    return (\r\n        <div>\r\n            <nav className=\"nav-wrapper blue-grey darken-4\">\r\n                <div className=\"container\">\r\n                    <Link to = '/' className=\"brand-logo\">\r\n                        <img src = {Logo} width=\"50\" height=\"50\" alt=\"mario plan\"/>    \r\n                    </Link>\r\n                    {auth.isLoaded && links}\r\n                </div>   \r\n            </nav>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        auth : state.firebase.auth,\r\n        profile : state.firebase.profile\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Navbar)\r\n","import React from 'react';\r\nimport moment from 'moment';\r\n\r\nfunction ProjectSummary({project}) {\r\n    return (\r\n        <div className=\"card grey lighten-1 z-depth-0 project-summary\">\r\n            <div className=\"card-content grey-text text-darken-3\">\r\n                <span className=\"card-title\">{project.title}</span>\r\n                {/* <p>{project.content}</p> */}\r\n                <p>Posted by Net Ninja</p>\r\n                <p className = \"grey-text\">{moment(project.createdAt.toDate()).calendar()}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjectSummary\r\n","import React from 'react'\r\nimport ProjectSummary from './ProjectSummary';\r\nimport {Link} from 'react-router-dom';\r\n\r\nfunction ProjectList({projects}) {\r\n    return (\r\n        <div className=\"project-list section\">\r\n            {projects && projects.map(project =>{\r\n                return (\r\n                    <Link to = {'/project/'+ project.id} key = {project.id}>\r\n                        <ProjectSummary project = {project}/>\r\n                    </Link>   \r\n                )\r\n            })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjectList\r\n","import React from 'react';\r\nimport moment from 'moment';\r\n\r\nfunction Notification(props) {\r\n    const {notifications} = props;\r\n    return (\r\n        <div className=\"section\">\r\n            <div className=\"card z-depth-0\">\r\n                <div className=\"card-content\">\r\n                    <span className = \"card-title\">Notifications</span>\r\n                    <ul className=\"notifications\">\r\n                        {notifications && notifications.map(item => {\r\n                            return (\r\n                                <li key = {item.id}>\r\n                                    <span className = \"pink-text\">{item.user} </span>\r\n                                    <span>{item.content}</span>\r\n                                    <div className=\"grey-text note-date\">\r\n                                        {moment(item.time.toDate()).fromNow()}\r\n                                    </div>\r\n                                </li>\r\n                            )\r\n                        })}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification\r\n","import React, { Component } from 'react'\r\nimport ProjectList from '../projects/ProjectList';\r\nimport Notification from './Notification';\r\nimport {connect} from 'react-redux';\r\nimport {compose} from 'redux';\r\nimport {firestoreConnect} from 'react-redux-firebase';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nexport class Dashboard extends Component {\r\n    render() {\r\n        //console.log(this.props)\r\n        const {projects, auth, notifications} = this.props\r\n        if (!auth.uid) return <Redirect to = '/login'/>\r\n        return (\r\n            <div className=\"dashbord container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col s12 m6\">\r\n                        <ProjectList projects = {projects}/>\r\n                    </div>\r\n                    <div className=\"col s12 m5 offset-m1\">\r\n                        <Notification notifications = {notifications} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return{\r\n        projects: state.firestore.ordered.projects,\r\n        auth: state.firebase.auth,\r\n        notifications : state.firestore.ordered.notifications\r\n    }\r\n}\r\n\r\nexport default compose(connect(mapStateToProps),\r\nfirestoreConnect([\r\n    {collection : 'projects', orderBy : ['createdAt', 'desc']},\r\n    {collection : 'notifications', limit : 3, orderBy : ['time', 'desc']}\r\n])\r\n)(Dashboard)\r\n\r\n//export default compose(firestoreConnect(['projects']),connect(mapStateToProps))(Dashboard)\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {compose} from 'redux';\r\nimport {firestoreConnect} from 'react-redux-firebase';\r\nimport {Redirect} from 'react-router-dom';\r\nimport moment from 'moment';\r\n\r\nfunction ProjectDetails(props) {\r\n    //console.log(props)\r\n    const {project, auth} = props;\r\n    if (!auth.uid) return <Redirect to = '/login'/>\r\n\r\n    if (project) {\r\n        return (\r\n            <div className=\"container section project-details\">\r\n                <div className=\"card z-depth-1\">\r\n                    <div className=\"card-content\">\r\n                        <span className=\"card-title\">{project.title}</span>\r\n                        <p>{project.content}</p>\r\n                    </div>\r\n                    <div className=\"card-action\">\r\n                        <div>Posted by {project.authorFirstName} {project.authorLastName}</div>\r\n                        <div>{moment(project.createdAt.toDate()).calendar()}</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        ) \r\n    }\r\n    else {\r\n        return(\r\n            <div className=\"container center\">\r\n            <p>Loading project...</p>\r\n        </div>\r\n        ) \r\n    }\r\n    \r\n}\r\n\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    const id = ownProps.match.params.id;\r\n    const projects = state.firestore.data.projects;\r\n    const project = projects ? projects[id] : null\r\n    return {\r\n        project:project,\r\n        auth : state.firebase.auth\r\n    }\r\n}\r\nexport default compose(connect(mapStateToProps), firestoreConnect(['project']))(ProjectDetails)\r\n\r\n","import React, { Component } from 'react';\r\nimport './auth.css';\r\nimport {connect} from 'react-redux';\r\nimport {signIn} from '../../store/actions/authAction';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nclass SignIn extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             email: '',\r\n             password: ''\r\n        }\r\n    }\r\n    handleChange = e => {\r\n        this.setState({\r\n            [e.target.id] : e.target.value\r\n        })\r\n    }\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.signIn(this.state);\r\n        //console.log(this.state)\r\n    }\r\n  render() {\r\n      const {authError, auth} = this.props\r\n      if (auth.uid) return <Redirect to = '/' />\r\n    return (\r\n    <div className=\"row\">\r\n        <div className=\"col s12 m6 offset-m3\">\r\n            <div className=\"container space\">\r\n                <form onSubmit = {this.handleSubmit} className = \"white\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col s10 offset-s1 m10 offset-m1\">\r\n                            <h5 className = \"grey-text text-darken-3\">Sign In</h5>\r\n                            <div className=\"input-field\">\r\n                                <input id=\"email\" type=\"email\" className=\"validate\" value = {this.state.email} onChange = {this.handleChange}/>\r\n                                <label htmlFor=\"email\">Email</label>\r\n                            </div>\r\n                            <br/>\r\n                            <div className=\"input-field\">\r\n                                <input id=\"password\" type=\"password\" className=\"validate\" value = {this.state.password} onChange = {this.handleChange}/>\r\n                                <label htmlFor=\"password\">Password</label>\r\n                            </div>\r\n                            <br/>\r\n                            <div className=\"input-field\">\r\n                                <button className = \"btn blue lighten-2 z-depth-0\">Login</button>\r\n                                <div className=\"red-text center\">\r\n                                    {authError ? <p>{authError}</p> : null }\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>    \r\n                </form>\r\n            </div>\r\n        </div> \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        authError : state.auth.authError,\r\n        auth : state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signIn : (creds) => dispatch(signIn(creds))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);\r\n","import React, { Component } from 'react';\r\nimport M from 'materialize-css';\r\nimport './auth.css';\r\nimport {connect} from 'react-redux';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {signUp} from '../../store/actions/authAction';\r\n\r\nclass SignUp extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             email: '',\r\n             password: '',\r\n             firstname: '',\r\n             lastname: '',\r\n             phonenumber: '',\r\n             gender:'',\r\n             confirmpassword: ''\r\n        }\r\n    }\r\n    componentDidMount(){\r\n          document.addEventListener('DOMContentLoaded', function() {\r\n            let options = { inDuration: 300, outDuration: 300, hover: true, coverTrigger: false};\r\n            const elems = document.querySelectorAll('select');\r\n            M.FormSelect.init(elems, options);\r\n          })\r\n    }\r\n    handleChange = e => {\r\n        this.setState({\r\n            [e.target.id] : e.target.value\r\n        })\r\n    }\r\n    selectChange = e => {\r\n        this.setState({\r\n            gender: e.target.value\r\n        })\r\n    }\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.signUp(this.state);\r\n        this.setState({\r\n            email: '',\r\n             password: '',\r\n             firstname: '',\r\n             lastname: '',\r\n             phonenumber: '',\r\n             gender:'',\r\n             confirmpassword: ''\r\n        })\r\n    }\r\n  render() {\r\n    const {auth, authError} = this.props\r\n    if (auth.uid) return <Redirect to = '/' />\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"col s12 m8 offset-m2\">\r\n            <div className=\"container space\">\r\n                <form onSubmit = {this.handleSubmit} className = \"white\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col s10 offset-s1 m10 offset-m1\">\r\n                            <h5 className = \"grey-text text-darken-3\">Register</h5>\r\n                            \r\n                            <div className=\"row\">\r\n                                <div className=\"col s12 m6\">\r\n                                    <div className=\"input-field\">\r\n                                        <input id=\"firstname\" type=\"text\" className=\"validate\" value = {this.state.firstname} onChange = {this.handleChange}/>\r\n                                        <label htmlFor=\"firstname\">First Name</label>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col s12 m6\">\r\n                                    <div className=\"input-field\">\r\n                                        <input id=\"lastname\" type=\"text\" className=\"validate\" value = {this.state.lastname} onChange = {this.handleChange}/>\r\n                                        <label htmlFor=\"lastname\">Last Name</label>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            \r\n                            <div className=\"row\">\r\n                                <div className=\"col s12 m6\">\r\n                                    <div className=\"input-field\">\r\n                                        <input id=\"phonenumber\" type=\"number\" className=\"validate\" value = {this.state.phonenumber} onChange = {this.handleChange}/>\r\n                                        <label htmlFor=\"phonenumber\">Phone Number</label>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col s12 m6\">\r\n                                    <div className=\"input-field\">\r\n                                        <select onChange={this.selectChange}>\r\n                                            <option value=\"\" disabled true = \"true\">sex</option>\r\n                                            <option value=\"male\">Male</option>\r\n                                            <option value=\"female\">Female</option>\r\n                                        </select>\r\n                                        <label htmlFor=\"gender\">Gender</label>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            \r\n                            <div className=\"input-field\">\r\n                                <input id=\"email\" type=\"email\" className=\"validate\" value = {this.state.email} onChange = {this.handleChange}/>\r\n                                <label htmlFor=\"email\">Email</label>\r\n                            </div>\r\n                            <br/>\r\n                            <div className=\"input-field\">\r\n                                <input id=\"password\" type=\"password\" className=\"validate\" value = {this.state.password} onChange = {this.handleChange}/>\r\n                                <label htmlFor=\"password\">Password</label>\r\n                            </div>\r\n                            <br/>\r\n                            <div className=\"input-field\">\r\n                                <input id=\"confirmpassword\" type=\"password\" className=\"validate\" value = {this.state.confirmpassword} onChange = {this.handleChange}/>\r\n                                <label htmlFor=\"confirmpassword\">Confirm Password</label>\r\n                            </div>\r\n                            <br/>\r\n                            <div className=\"input-field\">\r\n                                <button className = \"btn blue lighten-2 z-depth-0\">Register</button>\r\n                                <div className=\"red-text center\">\r\n                                    {authError ? <p>{authError}</p> : null }\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div> \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth : state.firebase.auth,\r\n        authError : state.auth.authError\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signUp : (newUser) => dispatch(signUp(newUser))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);\r\n","\r\nexport const createProject = (project) => {\r\n    return (dispatch, getState, {getFirestore}) => {\r\n        //make async call to database\r\n        const firestore = getFirestore();\r\n        firestore.collection('projects').add({\r\n            ...project,\r\n            authorFirstName: 'Lincoln',\r\n            authorLastName: 'Benjamin',\r\n            authorId: 1234,\r\n            createdAt: new Date()\r\n        }).then(() => {\r\n            dispatch({ type: 'CREATE_PROJECT', project});\r\n        }).catch((err) => {\r\n            dispatch({type: \"CREATE_PROJECT_ERROR\", err});\r\n        }) \r\n    }\r\n}","import React, { Component } from 'react';\r\nimport './project.css'\r\nimport { createProject } from '../../store/actions/projectAction';\r\nimport {connect} from 'react-redux';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nclass CreateProject extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             title: '',\r\n             content: ''\r\n        }\r\n    }\r\n    handleChange = e => {\r\n        this.setState({\r\n            [e.target.id] : e.target.value\r\n        })\r\n    }\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.createProject(this.state);\r\n        this.props.history.push('/');\r\n        this.setState({\r\n            title: '',\r\n            content: ''\r\n        })\r\n    }\r\n  render() {\r\n    const {auth} = this.props\r\n    if (!auth.uid) return <Redirect to = '/login'/>\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"col s12 m8 offset-m2\">\r\n                <div className=\"container space\">\r\n                <form onSubmit = {this.handleSubmit} className = \"white\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col s10 offset-s1 m10 offset-m1\">\r\n                            <h5 className = \"grey-text text-darken-3\">Create Project</h5>\r\n                            <div className=\"input-field\">\r\n                                <input id=\"title\" type=\"text\" className=\"validate\" value = {this.state.title} onChange = {this.handleChange}/>\r\n                                <label htmlFor=\"title\">Title</label>\r\n                            </div>\r\n                            <br/>\r\n                            <div className=\"input-field\">\r\n                                <textarea id=\"content\" className=\"materialize-textarea\" data-length=\"500\" value={this.state.content} onChange={this.handleChange}></textarea>\r\n                                <label htmlFor=\"content\">Content</label>\r\n                            </div>\r\n                            <br/>\r\n                            <div className=\"input-field\">\r\n                                <button className = \"btn blue lighten-2 z-depth-0\">Submit</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div> \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth : state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        createProject: (project) => dispatch(createProject(project))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject)\r\n","import React, {Component} from 'react';\nimport {BrowserRouter, Switch, Route} from 'react-router-dom';\n//import 'bootstrap/dist/css/bootstrap.min.css';\nimport 'materialize-css'; // It installs the JS asset only\nimport 'materialize-css/dist/css/materialize.min.css';\nimport Navbar from './components/layout/Navbar';\nimport Dashboard from './components/dashboard/Dashboard';\nimport ProjectDetails from './components/projects/ProjectDetails';\nimport SignIn from './components/auth/SignIn';\nimport SignUp from './components/auth/SignUp';\nimport CreateProject from './components/projects/CreateProject';\n\n\nclass App extends Component {\n  render () {\n    return (\n      <BrowserRouter>\n          <div className=\"App\">\n            <Navbar />\n            <Switch>\n              <Route exact path = '/' component = {Dashboard} />\n              <Route path = '/project/:id' component = {ProjectDetails} />\n              <Route path = '/login' component = {SignIn} />\n              <Route path = '/register' component = {SignUp} />\n              <Route path = '/create' component = {CreateProject} />\n            </Switch>\n          </div>\n      </BrowserRouter>\n    );\n  } \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\r\n    authError : null\r\n}\r\n\r\nconst authReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case \"LOGIN_ERROR\":\r\n            console.log('login failed')\r\n            return {\r\n                ...state,\r\n                authError : action.err.message\r\n            }\r\n        case \"LOGIN_SUCCESS\":\r\n            console.log('login success')\r\n            return {\r\n                ...state,\r\n                authError : null\r\n            }\r\n        case \"SIGNOUT_SUCCESS\":\r\n            console.log('signout success')\r\n            return state\r\n        case \"SIGNUP_SUCCESS\":\r\n            console.log('signup success')\r\n            return {\r\n                ...state,\r\n                authError : null\r\n            }\r\n        case \"SIGNUP_ERROR\":\r\n            console.log('login failed')\r\n            return {\r\n                ...state,\r\n                authError : action.err.message\r\n            }\r\n            default:\r\n            return state;\r\n    } \r\n}\r\n\r\nexport default authReducer","const initState = {\r\n    projects : [\r\n        {id: 1, title: \"sunt aut facere repellat provident\", content: \"quia et suscipit↵suscipit recusandae consequuntur …strum rerum est autem sunt rem eveniet architecto\"},\r\n        {id: 2, title: \"qui est esse\", content: \"est rerum tempore vitae↵sequi sint nihil reprehend…aperiam non debitis possimus qui neque nisi nulla\"},\r\n        {id: 3, title: \"ea molestias quasi exercitationem\", content: \"et iusto sed quo iure↵voluptatem occaecati omnis e…↵molestiae porro eius odio et labore et velit aut\"},\r\n        {id: 4, title: \"eum et est occaecati\", content: \"ullam et saepe reiciendis voluptatem adipisci↵sit … ipsam iure↵quis sunt voluptatem rerum illo velit\"},\r\n        // {id: 5, title: \"nesciunt quas odio\", content: \"repudiandae veniam quaerat sunt sed↵alias aut fugi…sse voluptatibus quis↵est aut tenetur dolor neque\"}\r\n    ]\r\n}\r\n\r\nconst projectReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case \"CREATE_PROJECT\":\r\n            console.log('create project', action.project)\r\n            return state;\r\n        case \"CREATE_PROJECT_ERROR\":\r\n            console.log('create project error', action.err)\r\n            return state;\r\n        default:\r\n            return state;\r\n    } \r\n}\r\n\r\nexport default projectReducer","import authReducer from \"./authReducer\";\r\nimport projectReducer from \"./projectReducer\";\r\nimport {combineReducers} from 'redux';\r\nimport {firestoreReducer} from 'redux-firestore';\r\nimport {firebaseReducer} from 'react-redux-firebase';\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    project: projectReducer,\r\n    firestore: firestoreReducer,\r\n    firebase: firebaseReducer\r\n})\r\n\r\nexport default rootReducer\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {createStore, applyMiddleware, compose} from 'redux';\nimport rootReducer from './store/reducers/rootReducer';\nimport {Provider} from 'react-redux'\nimport thunk from 'redux-thunk';\nimport { createFirestoreInstance, getFirestore, reduxFirestore} from 'redux-firestore'\nimport { ReactReduxFirebaseProvider, getFirebase} from 'react-redux-firebase'\n//import {reactReduxFirebase, getFirebase} from 'react-redux-firebase';\n//import {reduxFirestore, getFirestore} from 'redux-firestore';\n//import fbConfig from './config/fbConfig';\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth'\n\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n    apiKey: \"AIzaSyCnAkUh02GoGTPkZRfpusdemezl70kLyc8\",\n    authDomain: \"marioplan-4c16a.firebaseapp.com\",\n    databaseURL: \"https://marioplan-4c16a.firebaseio.com\",\n    projectId: \"marioplan-4c16a\",\n    storageBucket: \"\",\n    messagingSenderId: \"104976630311\",\n    appId: \"1:104976630311:web:66e637e12ae0bc87\"\n  };\n  // Initialize Firebase\n  firebase.initializeApp(firebaseConfig);\n  firebase.firestore().settings({timestampsInSnapshots : true})\n  \n  \nconst store = createStore(rootReducer, \n    compose(\n        applyMiddleware(thunk.withExtraArgument({getFirebase, getFirestore})),\n        reduxFirestore(firebase)\n));\n\nconst rrfConfig = {\n    userProfile: 'users',\n    useFirestoreForProfile: true, // Firestore for Profile instead of Realtime DB\n    attachAuthIsReady : true\n  }\n const rrfProps = {\n      firebase,\n      config: rrfConfig,\n      dispatch: store.dispatch,\n      createFirestoreInstance // <- needed if using firestore\n    }\n  \n\n//   store.firebaseAuthIsReady.then(() => {\n//   ReactDOM.render(<Provider store={store}><ReactReduxFirebaseProvider {...rrfProps}><App /></ReactReduxFirebaseProvider></Provider>, document.getElementById('root'));\n// })\n\nReactDOM.render(<Provider store={store}><ReactReduxFirebaseProvider {...rrfProps}><App /></ReactReduxFirebaseProvider></Provider>, document.getElementById('root'));\n\n\n// const store = createStore(rootReducer,\n//     compose(applyMiddleware(thunk.withExtraArgument({getFirestore, getFirebase})),\n//         reactReduxFirebase(fbConfig),\n//         reduxFirestore(fbConfig)\n//     )\n// );\n\n//ReactDOM.render(<Provider store = {store}><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}